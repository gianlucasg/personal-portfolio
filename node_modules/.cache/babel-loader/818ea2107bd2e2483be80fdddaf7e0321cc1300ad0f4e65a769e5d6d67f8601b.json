{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gian\\\\Desktop\\\\portafolio-gian\\\\src\\\\pages\\\\projects.jsx\",\n  _s = $RefreshSig$();\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport { CardActionArea } from '@mui/material';\nimport Chip from '@mui/material/Chip';\nimport { useEffect, useState } from 'react';\nimport Grid from '@mui/material/Grid';\nimport Container from '@mui/material/Container';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CardProjects(_ref) {\n  let {\n    img,\n    name,\n    description,\n    categories,\n    link\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      transition: \".1s all ease-in-out\",\n      '&:hover': {\n        transform: \"scale(1.1)\"\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(CardActionArea, {\n      href: link,\n      target: \"_blank\",\n      children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n        component: \"img\",\n        image: img,\n        alt: \"Project Thumbnail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          component: \"div\",\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), categories.map((data, i) => /*#__PURE__*/_jsxDEV(Chip, {\n          sx: {\n            marginRight: '5px',\n            backgroundColor: '#1f70d9',\n            color: 'white'\n          },\n          label: data\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_c = CardProjects;\nfunction GridCard(_ref2) {\n  let {\n    projects\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 0,\n    children: projects.map((data, i) => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 3,\n      lg: 3,\n      xl: 3,\n      children: /*#__PURE__*/_jsxDEV(CardProjects, {\n        img: data.thumbnail,\n        name: data.name,\n        description: data.description,\n        categories: data.categories,\n        link: data.link\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this);\n}\n_c2 = GridCard;\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(\"./projects.json\");\n      const proj = await response.json();\n      setProjects(proj.projects);\n    }\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(GridCard, {\n        projects: projects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Projects, \"fW3UEhSgK4Km1Jx93CVdOiFrvMk=\");\n_c3 = Projects;\nexport default Projects;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"CardProjects\");\n$RefreshReg$(_c2, \"GridCard\");\n$RefreshReg$(_c3, \"Projects\");","map":{"version":3,"names":["Card","CardContent","CardMedia","Typography","CardActionArea","Chip","useEffect","useState","Grid","Container","CardProjects","img","name","description","categories","link","transition","transform","map","data","i","marginRight","backgroundColor","color","GridCard","projects","thumbnail","Projects","setProjects","fetchData","response","fetch","proj","json"],"sources":["C:/Users/Gian/Desktop/portafolio-gian/src/pages/projects.jsx"],"sourcesContent":["import Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Typography from '@mui/material/Typography';\r\nimport {CardActionArea } from '@mui/material';\r\nimport Chip from '@mui/material/Chip';\r\nimport { useEffect, useState } from 'react';\r\nimport Grid from '@mui/material/Grid';\r\nimport Container from '@mui/material/Container';\r\n\r\nfunction CardProjects({img,name,description,categories,link}){\r\n    return(\r\n        <Card sx={{transition:\".1s all ease-in-out\",'&:hover':{transform: \"scale(1.1)\"}}}>\r\n            <CardActionArea href={link} target=\"_blank\">\r\n                <CardMedia\r\n                component=\"img\"\r\n                image={img}\r\n                alt=\"Project Thumbnail\"\r\n                />\r\n                <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {name}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {description}\r\n                </Typography>\r\n                {categories.map((data,i)=>(\r\n                    <Chip key={i} sx={{marginRight:'5px',backgroundColor:'#1f70d9',color:'white'}} label={data} />\r\n                ))}\r\n                </CardContent>\r\n            </CardActionArea>\r\n        </Card>\r\n\r\n    )\r\n}\r\nfunction GridCard({projects}){\r\n    return(\r\n            <Grid container spacing={0}>\r\n                    {projects.map((data,i)=>(\r\n                        <Grid key={i} item xs={12} sm={12} md={3} lg={3} xl={3}>\r\n                        <CardProjects img={data.thumbnail} name={data.name} description={data.description} categories={data.categories} link={data.link}/>\r\n                        </Grid>\r\n                    ))}\r\n            </Grid>\r\n    )\r\n}\r\nconst Projects = () => {\r\n    const [projects,setProjects] = useState([]);\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const response = await fetch(\"./projects.json\");\r\n            const proj = await response.json();\r\n            setProjects(proj.projects);\r\n        }\r\n        fetchData();\r\n    });\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <GridCard  projects={projects}/>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\nexport default Projects;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}